 1 静态数组
	
int (*B)[3][4];
    	
int A[2][3][4];
	
B的类型是int （*）[3][4], A的类型是int [2][3][4]可以当成 int（*）[3][4], 可以赋给 int（*）[3][4]类型，但是不能赋值给int [2][3][4]类型（此类型为静态数组的const指针）。
int [2][3][4] 和 int （*）[3][4]指向 [3][4]的数组。
B=A;
如果直接声明固定维度的数组，则数组指针是这种形式，相当于const指针。可以用*(*(*(B+i)+j)+q);


B+i的类型是int （*）[3][4]，指向[3][4]的数组
*（B+i)是int （*）[4]类型，*（b+i)+j是int (*)[4]类型，指向[4]的数组
*(*(B+i)+j)是 int *类型， *(*(B+i)+j)+q是int *类型，指向int
*(*(*(B+i)+j)+q)是int类型


2 动态分配
	
int ***B;
    	
int A[2][3][4];
	
B=(int***)malloc(2*sizeof(int**));
	
B[i]=(int**)malloc(3*sizeof(int*));
	
B[i][j]=(int*)malloc(4*sizeof(int));

然后用A[i][j][q]给B[i][j][q]赋值。

int ***B;
B = new int** [2];    注意不是new (int***) [2]; 很重要！
B[0] = new int* [3];
B[0][0] = new int [4];